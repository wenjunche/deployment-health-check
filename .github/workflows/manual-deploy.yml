name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      enviroment:
        description: "Enviroment to deploy to."
        required: true
        default: "dev"

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    env:
      ENV: ${{ github.event.inputs.enviroment }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Login to Github Private Repository
        run: git config --global url."https://$GITHUB_ACTOR:${{secrets.GITHUB_TOKEN}}@github.com".insteadOf "https://github.com"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
            node-version: 'lts/*'

      - name: Checkout Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Install Dependencies
        run: npm ci

      - name: Set Dev
        if: env.ENV == 'dev'
        run: |
          echo "S3_BUCKET=s3://cdn.openfin.co-health/health/deployment/dev" >> $GITHUB_ENV
          echo "BASE_PATH=/health/deployment/dev" >> $GITHUB_ENV

      - name: Set Staging
        if: env.ENV == 'staging'
        run: |
          echo "S3_BUCKET=s3://cdn.openfin.co-health/health/deployment/staging" >> $GITHUB_ENV
          echo "BASE_PATH=/health/deployment/staging" >> $GITHUB_ENV

      - name: Set Prod
        if: env.ENV == 'prod'
        run: |
          echo "S3_BUCKET=s3://cdn.openfin.co-health/health/deployment" >> $GITHUB_ENV
          echo "BASE_PATH=/health/deployment" >> $GITHUB_ENV
          
      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
          BASE_PATH: ${{ github.env.BASE_PATH }}

      - name: Deploy Files
        run: |
          echo "$S3_BUCKET"
          aws s3 sync ./out $S3_BUCKET --recursive
